---
layout: blog
title:  bower使用笔记
category: 环境配置
excerpt: BolgExcerpt
tags: 命令行 库管理 环境配置
---
bower，说的简单点就是前端资源管理器，比如应用中需要用到`bootstrap`库，以前， 可能会去官网或者静态资源库等地方查看版本、然后下载。使用bower，只需要一条命令行`bower install bootstrap`,就可以自动下载，甚至可以加上`#3.0.0`，直接下载需要的版本，当然功能不止如此。  

### 安装
 
先查看一下版本  

```node
bower -v  
>1.7.7
```  

如果没有安装的话  

```
npm install bower
```  

### 准备 

#### 新建配置文件  

```
bower init
```  

#### 安装需要的库  

```  
通过 bower.json 文件安装
bower install
通过在github上注册的包名安装
bower install jquery
GitHub短链接
bower install desandro/masonry
Github上的 .git
bower install git://github.com/user/package.git
URL
bower install http://example.com/script.js
```  

#### 安装时候保留依赖  

```
bower install <package> --save  
bower install <package> --save-dev  

//两者都会将依赖信息添加到配置文件中，-dev一般多用于开发环境，比如测试
```  

#### 更改默认安装目录  

bower 会把包默认安装到 `bower_components`目录，如果要更改路径，新建一个`.bowerrc`文件，里面内容为,现在安装之后会将库存放在在`lib`文件夹  

```
{
  "directory" : "lib"
}
```  

#### 更新库  

```
bower update
bower update <package>  
  
//如果不给出具体的库，会将所有可以更新的库更新
```  

#### 卸载库  

```
bower uninstall <package>  
//会将当前库依赖的库一起卸载，若依赖的库被其他库依赖，则不会
```  

#### 卸载本地多余的库  

```
bower prune
```

### 缓存  
  
#### 列出缓存  

```
bower cache list  

bower cache list vue
vue=https://github.com/vuejs/vue.git#1.0.26

```  

#### 清除缓存  

```
bower cache clean
bower cache clean <name> [<name> ...]
bower cache clean <name>#<version> [<name>#<version> ..]
```

#### 使用本地缓存  

如果别的应用安装过你现在要用到的库，可以直接从本地缓存提取安装，加速咯！ 

```
bower install <package> --offline
```  

### 信息查看  

#### 列出清单  

```  
bower list 
//查看目录信息  --relative，-r
bower list <package> -r  
//生成简单json格式映射源  --paths，-p  
bower list <package> -p  
```  

#### 通过包名查看包在网上的地址  

```
bower lookup <name>
```

#### 查看信息  

```
bower info <package>
bower info <package> [<property>]
bower info <package>#<version> [<property>]
```  

#### 在浏览器打开库的主页  

```
bower home
bower home <package>
bower home <package>#<version>
```  

#### 查看链接  

```
bower link  
bower link <name> [<local name>]
```

#### 搜索库  

```
bower search <name>
```  

#### 注册  

```
bower register <name> <url>
```  

#### 登录  

```
bower login
//-t, --token 通过身份令牌而不是用户名和密码登录
```  

### 可选参数  

#### force  

强制重新安装已安装的包,若有冲突直接安装最新版  

```
-f，--force
```

#### json  

输出json格式记录
```
-j，--json
```

#### 日志  

输出日志信息，如错误，冲突，警告，行动，信息，调试  

```
-l，--loglevel
```

#### 离线  

离线使用本地缓存  

```
-o，--offline
```

#### 安静模式  

只输出重要信息  

```
-q，--quiet
```

#### 无信息模式  

不输出任何东西，除了错误。  

```
-s，--silent
```  

#### 详细信息  

输出详细信息  

```
-V，--verbose
```  

### <package>可选项  

#### 包名  

```
jquery
normalize.css
```  

#### Git的端点  

```
https://github.com/user/package.git
git@github.com:user/package.git
```  

可以不包含` .git`  

#### 本地文件夹  

```
my/local/folder/
```  

#### 速记地址  

默认是github上的  

```
user/package
``` 

#### URL  

可以当做下载器  

```
http://example.com/script.js 
http://example.com/style.css 
http://example.com/package.zip（内容将被解压）
http://example.com/package.tar（内容将被解压）
```  

### <package>可选项  

#### 版本  

```
#1.2.3
```  

#### 版本范围  

```
＃1.2 
＃~1.2.3 
＃^ 1.2.3 
＃> = 1.2.3 <2.0
```  

#### git标签、sha、分支  

```
#<tag>
#<sha>
#<branch>
```  

#### svn 版本  

```
#<revision>
```

### 编程API  

```javascript
var bower = require('bower');

bower.commands
.install(['jquery'], { save: true }, { /* custom config */ })
.on('end', function (installed) {
    console.log(installed);
});

bower.commands
.search('jquery', {})
.on('end', function (results) {
    console.log(results);
});
```  

四种事件类型： 

* `log` 记录状态和进度信息  
* `prompt` 请求用户输入关键信息  
* `error` 出错  
* `end` 运行结束

### 多版本安装  

如果需要安装多个版本，比如多个版本的jquery  

```
# 安装jquery v1.7.0
bower install jquery-older=juqery#1.11.1 [<options>]

# 安装jquery v1.9.0
bower install jquery-old=juqery#2.4.1 [<options>]

# 安装最新版jquery
bower install jquery [<options>]
```

--- 
转载请注明出处   

lmaomaoz <{{ site.url }}/blog{{page.url}}>
